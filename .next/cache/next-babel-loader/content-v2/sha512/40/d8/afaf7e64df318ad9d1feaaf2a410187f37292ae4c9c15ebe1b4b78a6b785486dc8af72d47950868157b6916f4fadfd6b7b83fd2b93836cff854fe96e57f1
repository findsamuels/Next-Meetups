{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sam/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport MeetUpDetail from '../../components/meetups/MeetUpDetail';\nimport { MongoClient } from 'mongodb';\n\nfunction MeetUpDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetUpDetail, {\n    image: props.image,\n    title: props.title,\n    id: props.id,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://findsamuels:uTkU4De05rCp32D2@cluster0.0hagi.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meeetupsCollection = db.collection('meetups');\n  const meetups = await meeetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport const getStaticProps = async context => {\n  const meetUpId = context.params.meetupId;\n  return {\n    props: {\n      image: 'https://www.planetware.com/wpimages/2019/09/ireland-in-pictures-most-beautiful-places-to-visit-hapenny-bridge-dublin.jpg',\n      title: 'A first Meetup',\n      id: meetUpId,\n      address: 'Some address 5, 4242 San City',\n      description: 'This is a first meetup!'\n    },\n    revalidate: 5\n  };\n};\nexport default MeetUpDetails;","map":{"version":3,"sources":["/Users/sam/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Fragment","MeetUpDetail","MongoClient","MeetUpDetails","props","image","title","id","address","description","getStaticPaths","client","connect","db","meeetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","meetUpId","revalidate"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,SAAQC,WAAR,QAA0B,SAA1B;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAEzB,sBAAO,QAAC,YAAD;AACP,IAAA,KAAK,EAAEA,KAAK,CAACC,KADN;AAEP,IAAA,KAAK,EAAED,KAAK,CAACE,KAFN;AAGP,IAAA,EAAE,EAAEF,KAAK,CAACG,EAHH;AAIP,IAAA,OAAO,EAAEH,KAAK,CAACI,OAJR;AAKP,IAAA,WAAW,EAAEJ,KAAK,CAACK;AALZ;AAAA;AAAA;AAAA;AAAA,UAAP;AAWH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AAEnC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACjB,2GADiB,CAArB;AAEE,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B;AAEA,QAAMC,OAAO,GAAG,MAAMF,kBAAkB,CAACG,IAAnB,CAAwB,EAAxB,EAA4B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA5B,EAAqCC,OAArC,EAAtB;AAENR,EAAAA,MAAM,CAACS,KAAP;AACI,SAAM;AACFC,IAAAA,QAAQ,EAAE,KADR;AAEFC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAACC,MAAAA,MAAM,EAAE;AACnCC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADyB;AAAT,KAAL,CAAlB;AAFL,GAAN;AAOH;AAED,OAAO,MAAMC,cAAc,GAAG,MAAMC,OAAN,IAAkB;AAE5C,QAAMC,QAAQ,GAAGD,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,SAAM;AACFtB,IAAAA,KAAK,EAAC;AACFC,MAAAA,KAAK,EAAC,0HADJ;AAEFC,MAAAA,KAAK,EAAC,gBAFJ;AAGFC,MAAAA,EAAE,EAACuB,QAHD;AAIFtB,MAAAA,OAAO,EAAC,+BAJN;AAKFC,MAAAA,WAAW,EAAC;AALV,KADJ;AAQFsB,IAAAA,UAAU,EAAE;AARV,GAAN;AAUH,CAbM;AAeP,eAAe5B,aAAf","sourcesContent":["import { Fragment } from \"react/cjs/react.production.min\";\nimport MeetUpDetail from '../../components/meetups/MeetUpDetail'\n\nimport {MongoClient} from 'mongodb'\n\nfunction MeetUpDetails(props){\n    \n    return <MeetUpDetail \n    image={props.image}\n    title={props.title}\n    id={props.id}\n    address={props.address}\n    description={props.description}\n    \n    />\n\n\n    \n}\n\nexport async function getStaticPaths() {\n\n    const client = await MongoClient.connect(\n        'mongodb+srv://findsamuels:uTkU4De05rCp32D2@cluster0.0hagi.mongodb.net/meetups?retryWrites=true&w=majority');\n      const db = client.db();\n    \n      const meeetupsCollection = db.collection('meetups')\n    \n      const meetups = await meeetupsCollection.find({}, {_id:1}).toArray()\n\nclient.close()\n    return{\n        fallback: false,\n        paths: meetups.map(meetup => ({params: {\n            meetupId: meetup._id.toString()\n        }}))\n\n    }\n}\n\nexport const getStaticProps = async(context) => {\n\n    const meetUpId = context.params.meetupId\n    return{\n        props:{\n            image:'https://www.planetware.com/wpimages/2019/09/ireland-in-pictures-most-beautiful-places-to-visit-hapenny-bridge-dublin.jpg',\n            title:'A first Meetup',\n            id:meetUpId,\n            address:'Some address 5, 4242 San City',\n            description:'This is a first meetup!',\n        },\n        revalidate: 5\n    }\n}\n\nexport default MeetUpDetails;"]},"metadata":{},"sourceType":"module"}